create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String) engine=MergeTree order by (a.b.c, a.b.d) settings min_rows_for_wide_part=100000000, min_bytes_for_wide_part=1000000000, vertical_merge_algorithm_min_columns_to_activate=10;
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
1
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String) engine=MergeTree order by (a.b.c, a.b.d) settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_columns_to_activate=10;
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
1
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String) engine=MergeTree order by (a.b.c, a.b.d) settings min_rows_for_wide_part=100000000, min_bytes_for_wide_part=1000000000, vertical_merge_algorithm_min_columns_to_activate=1;
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
1
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String) engine=MergeTree order by (a.b.c, a.b.d) settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_columns_to_activate=1;
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
5	((1,'str_2',[0,1,2,3,4]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
7	((1,'str_1',[0,1,2,3,4,5,6]))	Hello, World!
3	((1,'str_0',[0,1,2]))	Hello, World!
2	((0,'str_2',[0,1]))	Hello, World!
4	((0,'str_1',[0,1,2,3]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
6	((0,'str_0',[0,1,2,3,4,5]))	Hello, World!
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
1
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC
Sorting: a.b.c ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC
Sorting: a.b.c DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d ASC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d ASC
Sorting: a.b.c DESC, a.b.d DESC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c ASC, __table1.a.b.d DESC
Sorting: a.b.c ASC, a.b.d ASC
Sorting (Sorting for ORDER BY)
Sorting: __table1.a.b.c DESC, __table1.a.b.d DESC
Sorting: a.b.c DESC, a.b.d DESC
