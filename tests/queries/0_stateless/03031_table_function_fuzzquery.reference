SELECT 1
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    WHERE toString(number % 2)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 ASC
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 DESC
SELECT\n    item_id,\n    *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], toNullable(\'Array(String)\')) AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 ASC
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 ASC
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(materialize(toLowCardinality(3)))\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString(count(), (number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC NULLS FIRST,\n    2 ASC,\n    3 ASC
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 ASC
SELECT *\nFROM\n(\n    SELECT\n        [toString((number % 2) * 2)],\n        CAST([toString(number % 2)], toNullable(\'Array(LowCardinality(String))\')) AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 DESC
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    WHERE (number % 2) * toUInt128(2)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC
SELECT\n    toString((number % 2) * 2),\n    *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 ASC
SELECT *\nFROM\n(\n    SELECT\n        CAST([toString(number % 2)], \'Array(LowCardinality(String))\') AS item_id,\n        count()\n    FROM numbers(3)\n    GROUP BY item_id\n        WITH TOTALS\n) AS l\nFULL OUTER JOIN\n(\n    SELECT CAST([toString((number % 2) * 2)], \'Array(String)\') AS item_id\n    FROM numbers(3)\n) AS r ON l.item_id = r.item_id\nORDER BY\n    1 ASC,\n    2 ASC,\n    3 DESC
