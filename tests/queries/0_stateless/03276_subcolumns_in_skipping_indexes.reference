create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String, index idx1 a.b.c type minmax, index idx2 a.b.d type minmax, index idx3 a.b.c || a.b.d type minmax) engine=MergeTree order by tuple() settings min_rows_for_wide_part=100000000, min_bytes_for_wide_part=1000000000, vertical_merge_algorithm_min_columns_to_activate=10;
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
1
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String, index idx1 a.b.c type minmax, index idx2 a.b.d type minmax, index idx3 a.b.c || a.b.d type minmax) engine=MergeTree order by tuple() settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_columns_to_activate=10;
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
1
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String, index idx1 a.b.c type minmax, index idx2 a.b.d type minmax, index idx3 a.b.c || a.b.d type minmax) engine=MergeTree order by tuple() settings min_rows_for_wide_part=100000000, min_bytes_for_wide_part=1000000000, vertical_merge_algorithm_min_columns_to_activate=1;
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
1
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
create table test (id UInt64, a Tuple(b Tuple(c UInt32, d String, e Array(UInt32))), data String, index idx1 a.b.c type minmax, index idx2 a.b.d type minmax, index idx3 a.b.c || a.b.d type minmax) engine=MergeTree order by tuple() settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_columns_to_activate=1;
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
1
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
0	((0,'str_0',[]))	Hello, World!
1	((1,'str_1',[0]))	Hello, World!
20	((20,'str_20',[]))	Hello, World!
21	((21,'str_21',[0]))	Hello, World!
22	((22,'str_22',[0,1]))	Hello, World!
23	((23,'str_23',[0,1,2]))	Hello, World!
24	((24,'str_24',[0,1,2,3]))	Hello, World!
25	((25,'str_25',[0,1,2,3,4]))	Hello, World!
26	((26,'str_26',[0,1,2,3,4,5]))	Hello, World!
27	((27,'str_27',[0,1,2,3,4,5,6]))	Hello, World!
28	((28,'str_28',[0,1,2,3,4,5,6,7]))	Hello, World!
29	((29,'str_29',[0,1,2,3,4,5,6,7,8]))	Hello, World!
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
1
Indexes:
Skip
Indexes:
Skip
Indexes:
Skip
Skip
Indexes:
Skip
