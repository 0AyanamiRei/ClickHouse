services:
  spark-iceberg:
    image: tabulario/spark-iceberg
    build: spark/
    depends_on:
      hive:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8080:8080
      - 10000:10000
      - 10001:10001

  hive:
    build: ./../../hms_extensions/
    restart: unless-stopped
    depends_on:
      minio:
        condition: service_started
    ports:
      - "9083:9083"
    environment:
      SERVICE_NAME: "metastore"
      SERVICE_OPTS: "-Dmetastore.warehouse.dir=s3a://warehouse-hms/data/"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9083"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 45s

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=ClickHouse_Minio_P@ssw0rd
      - MINIO_DOMAIN=minio
    networks:
      default:
        aliases:
          - warehouse.minio
    ports:
      - 9001
      - 9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=ClickHouse_Minio_P@ssw0rd
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minio ClickHouse_Minio_P@ssw0rd) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse-hms;
      /usr/bin/mc mb minio/warehouse-hms --ignore-existing;
      /usr/bin/mc policy set public minio/warehouse-hms;
      tail -f /dev/null
      "
