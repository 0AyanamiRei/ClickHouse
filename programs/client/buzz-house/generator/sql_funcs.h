#pragma once

#include <cstdint>
#include <vector>
#include "buzz-house/ast/sql_grammar.pb.h"

namespace buzzhouse
{

class CHAggregate
{
public:
    const bool support_distinct, support_nulls_clause;
    const uint32_t fnum, min_args, max_args, min_params, max_params;

    CHAggregate(
        const uint32_t f,
        const uint32_t min_p,
        const uint32_t max_p,
        const uint32_t min_a,
        const uint32_t m_args,
        const bool sd,
        const bool snc)
        : support_distinct(sd), support_nulls_clause(snc), fnum(f), min_args(min_a), max_args(m_args), min_params(min_p), max_params(max_p)
    {
    }
};

class CHFunction
{
public:
    const uint32_t fnum, min_lambda_param, max_lambda_param, min_args, max_args;

    CHFunction(const uint32_t f, const uint32_t min_lambda, const uint32_t max_lambda, const uint32_t min_a, const uint32_t m_args)
        : fnum(f), min_lambda_param(min_lambda), max_lambda_param(max_lambda), min_args(min_a), max_args(m_args)
    {
    }
};

const constexpr uint32_t ulimited_params = 10000;

const std::vector<const CHAggregate> CHAggrs = {
    //standard aggregates
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcount, 0, 0, 0, 1, true, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmin, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmax, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsum, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCavg, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCany, 0, 0, 1, 1, false, true),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCstddevPop, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCstddevPopStable, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCstddevSamp, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCstddevSampStable, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCvarPop, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCvarSamp, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcorr, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcorrStable, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcorrMatrix, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcovarPop, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcovarPopStable, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcovarPopMatrix, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcovarSamp, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcovarSampStable, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcovarSampMatrix, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCentropy, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCexponentialMovingAverage, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCintervalLengthSum, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedian, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianDeterministic, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianExact, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianExactWeighted, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianTiming, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianTimingWeighted, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianTDigest, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianTDigestWeighted, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianBFloat16, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmedianDD, 1, 2, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCrankCorr, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumKahan, 0, 0, 1, 1, false, false),
    //clickhouse aggregates
    CHAggregate(sql_query_grammar::SQLFunc::FUNCanalysisOfVariance, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCanyHeavy, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCanyLast, 0, 0, 1, 1, false, true),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCboundingRatio, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCfirst_value, 0, 0, 1, 1, false, true),
    CHAggregate(sql_query_grammar::SQLFunc::FUNClast_value, 0, 0, 1, 1, false, true),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCargMin, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCargMax, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCavgWeighted, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCtopK, 1, 2, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCtopKWeighted, 1, 2, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCdeltaSum, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCdeltaSumTimestamp, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArray, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArrayLast, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupUniqArray, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArrayInsertAt, 2, 2, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArrayMovingAvg, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArrayMovingSum, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArraySample, 1, 2, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArraySorted, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupArrayIntersect, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitAnd, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitOr, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitXor, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitmap, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitmapAnd, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitmapOr, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCgroupBitmapXor, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumWithOverflow, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumMap, 0, 0, 1, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumMapWithOverflow, 0, 0, 1, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumMapFiltered, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumMapFilteredWithOverflow, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCminMap, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmaxMap, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCskewSamp, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCskewPop, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCkurtSamp, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCkurtPop, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniq, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniqExact, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniqCombined, 1, 1, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniqCombined64, 1, 1, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniqHLL12, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniqTheta, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantile, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantiles, 1, ulimited_params, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileExact, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileExactLow, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileExactHigh, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileExactWeighted, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileTiming, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileTimingWeighted, 1, 1, 1, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileDeterministic, 1, 1, 1, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileTDigest, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileTDigestWeighted, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileBFloat16, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileBFloat16Weighted, 0, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileDD, 0, 2, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsimpleLinearRegression, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsingleValueOrNull, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcontingency, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcramersV, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCcramersVBiasCorrected, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCtheilsU, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmaxIntersections, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmaxIntersectionsPosition, 0, 0, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCmeanZTest, 3, 3, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileGK, 2, 2, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCquantileInterpolatedWeighted, 1, 1, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsparkBar, 1, 3, 2, 2, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsumCount, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNClargestTriangleThreeBuckets, 1, 1, 2, 2, false, false),
    //JSON and Dynamic tyoes
    CHAggregate(sql_query_grammar::SQLFunc::FUNCdistinctDynamicTypes, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCdistinctJSONPaths, 0, 0, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCdistinctJSONPathsAndTypes, 0, 0, 1, 1, false, false),
    //parametric aggregates
    CHAggregate(sql_query_grammar::SQLFunc::FUNChistogram, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsequenceMatch, 1, 1, 3, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsequenceCount, 1, 1, 3, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCwindowFunnel, 2, ulimited_params, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCretention, 0, 0, 1, ulimited_params, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCuniqUpTo, 1, 1, 1, 1, false, false),
    CHAggregate(sql_query_grammar::SQLFunc::FUNCsequenceNextNode, 2, 2, 4, ulimited_params, false, false)};

const CHFunction materialize = CHFunction(sql_query_grammar::SQLFunc::FUNCmaterialize, 0, 0, 1, 1);

const std::vector<const CHFunction> CHFuncs = {
    //arithmetic Functions
    CHFunction(sql_query_grammar::SQLFunc::FUNCplus, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCminus, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiply, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdivide, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCintDiv, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCintDivOrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisFinite, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisInfinite, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCifNotFinite, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisNaN, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmodulo, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmoduloOrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpositiveModulo, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnegate, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCabs, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgcd, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNClcm, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmax2, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmin2, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiplyDecimal, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdivideDecimal, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbyteSwap, 0, 0, 1, 1),
    //arrays
    CHFunction(sql_query_grammar::SQLFunc::FUNCempty, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnotEmpty, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClength, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayUInt8, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayUInt16, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayUInt32, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayUInt64, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayInt8, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayInt16, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayInt32, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayInt64, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayFloat32, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayFloat64, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayDate, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayDateTime, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayString, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCemptyArrayToSingle, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayWithConstant, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayConcat, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayElement, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChas, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasAll, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasAny, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasSubstr, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCindexOf, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayCount, 0, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayDotProduct, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountEqual, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayEnumerate, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayEnumerateUniq, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayEnumerateUniqRanked, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPopBack, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPopFront, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPushBack, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPushFront, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayResize, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarraySlice, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayShingles, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarraySort, 0, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPartialSort, 0, 1, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayReverseSort, 0, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPartialReverseSort, 0, 1, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayReverseSort, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayShuffle, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayPartialShuffle, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayUniq, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayJoin, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayDifference, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayDistinct, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayEnumerateDense, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayEnumerateDenseRanked, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayIntersect, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayJaccardIndex, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFold, 1, 1, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayReverse, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreverse, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFlatten, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayCompact, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayZip, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayAUC, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayMap, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFilter, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFill, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayReverseFill, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarraySplit, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayReverseSplit, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayExists, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayAll, 0, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFirst, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFirstOrNull, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayLast, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayLastOrNull, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayFirstIndex, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayLastIndex, 1, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayMin, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayMax, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarraySum, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayAvg, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayCumSum, 0, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayCumSumNonNegative, 0, 1, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayProduct, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayRotateLeft, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayRotateRight, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayShiftLeft, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayShiftRight, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayRandomSample, 0, 0, 2, 2),
    //bit functions
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitAnd, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitOr, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitXor, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitNot, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitShiftLeft, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitShiftRight, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitRotateLeft, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitRotateRight, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitSlice, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbyteSlice, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitTest, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitTestAll, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitTestAny, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitCount, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitHammingDistance, 0, 0, 2, 2),
    //bitmap functions
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapBuild, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapToArray, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapSubsetInRange, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapSubsetLimit, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubBitmap, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapContains, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapHasAny, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapHasAll, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapCardinality, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapMin, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapMax, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapTransform, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapAnd, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapOr, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapXor, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapAndnot, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapAndCardinality, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapOrCardinality, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapXorCardinality, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmapAndnotCardinality, 0, 0, 2, 2),
    //comparison functions
    CHFunction(sql_query_grammar::SQLFunc::FUNCequals, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnotEquals, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCless, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgreater, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNClessOrEquals, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgreaterOrEquals, 0, 0, 2, 2),
    //conditional functions
    CHFunction(sql_query_grammar::SQLFunc::FUNCif, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiIf, 0, 0, 3, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgreatest, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCleast, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCclamp, 0, 0, 3, 3),
    //time functions
    CHFunction(sql_query_grammar::SQLFunc::FUNCmakeDate, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmakeDate32, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmakeDateTime, 0, 0, 6, 7),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmakeDateTime64, 0, 0, 6, 7),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoTimeZone, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimeZoneOf, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimeZoneOffset, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoYear, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoQuarter, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoMonth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDayOfYear, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDayOfMonth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDayOfWeek, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoHour, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoMinute, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoSecond, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoMillisecond, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUnixTimestamp, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfYear, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfISOYear, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfQuarter, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfMonth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoLastDayOfMonth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoMonday, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfWeek, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoLastDayOfWeek, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfDay, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfHour, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfMinute, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfSecond, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfMillisecond, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfMicrosecond, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfNanosecond, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfFiveMinutes, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfTenMinutes, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfFifteenMinutes, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStartOfInterval, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoTime, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeYearNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeQuarterNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeMonthNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeWeekNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeDayNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeHourNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeMinuteNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoRelativeSecondNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoISOYear, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoISOWeek, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoWeek, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoYearWeek, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDaysSinceYearZero, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromDaysSinceYearZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromDaysSinceYearZero32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCage, 0, 0, 3, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdate_diff, 0, 0, 3, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCDATE_TRUNC, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdate_add, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdate_sub, 0, 0, 2, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimestamp_add, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimestamp_sub, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddDate, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubDate, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimeSlot, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCchangeYear, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCchangeMonth, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCchangeDay, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCchangeHour, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCchangeMinute, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCchangeSecond, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddYears, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddQuarters, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddMonths, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddWeeks, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddDays, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddHours, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddMinutes, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddSeconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddMilliseconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddMicroseconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddNanoseconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddInterval, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCaddTupleOfIntervals, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractYears, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractQuarters, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractMonths, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractWeeks, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractDays, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractHours, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractMinutes, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractSeconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractMilliseconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractMicroseconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractNanoseconds, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractInterval, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubtractTupleOfIntervals, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimeSlots, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdateName, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmonthName, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimeDiff, 0, 0, 2, 2),
    //distance
    CHFunction(sql_query_grammar::SQLFunc::FUNCL1Norm, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL2Norm, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL2SquaredNorm, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCLinfNorm, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCLpNorm, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL1Distance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL2Distance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL2SquaredDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCLinfDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCLpDistance, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL1Normalize, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCL2Normalize, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCLinfNormalize, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCLpNormalize, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcosineDistance, 0, 0, 2, 2),
    //encoding
    CHFunction(sql_query_grammar::SQLFunc::FUNCchar, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNChex, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCunhex, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbin, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCunbin, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmaskToList, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitmaskToArray, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbitPositionsToArray, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmortonEncode, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmortonDecode, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChilbertEncode, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNChilbertDecode, 0, 0, 2, 2),
    //hash
    CHFunction(sql_query_grammar::SQLFunc::FUNChalfMD5, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCMD4, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCMD5, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsipHash64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsipHash64Keyed, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsipHash128, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsipHash128Keyed, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsipHash128Reference, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsipHash128ReferenceKeyed, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcityHash64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCintHash32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCintHash64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCSHA1, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCSHA224, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCSHA256, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCSHA512, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCSHA512_256, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCBLAKE3, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCURLHash, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfarmFingerprint64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfarmHash64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCjavaHash, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCjavaHashUTF16LE, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNChiveHash, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmetroHash64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCjumpConsistentHash, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCkostikConsistentHash, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCripeMD160, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmurmurHash2_32, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmurmurHash2_64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgccMurmurHash, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCkafkaMurmurHash, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmurmurHash3_32, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmurmurHash3_64, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmurmurHash3_128, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCxxh3, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCxxHash32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCxxHash64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSimHash, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSimHashCaseInsensitive, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSimHashUTF8, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSimHashCaseInsensitiveUTF8, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleSimHash, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleSimHashCaseInsensitive, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleSimHashUTF8, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleSimHashCaseInsensitiveUTF8, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwyHash64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHash, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashCaseInsensitive, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashCaseInsensitiveUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashArg, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashArgCaseInsensitive, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashArgUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramMinHashArgCaseInsensitiveUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHash, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashCaseInsensitive, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashCaseInsensitiveUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashArg, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashArgCaseInsensitive, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashArgUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwordShingleMinHashArgCaseInsensitiveUTF8, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsqidEncode, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsqidDecode, 0, 0, 1, 1),
    //JSON
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONHas, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONExtractUInt, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONExtractInt, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONExtractFloat, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONExtractBool, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONExtractRaw, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsimpleJSONExtractString, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisValidJSON, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONHas, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONLength, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONType, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractUInt, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractInt, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractFloat, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractBool, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractString, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtract, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractKeysAndValues, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractKeys, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractRaw, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractArrayRaw, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONExtractKeysAndValuesRaw, 0, 0, 1, 5),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSON_EXISTS, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSON_QUERY, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSON_VALUE, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoJSONString, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONArrayLength, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCjsonMergePatch, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONAllPaths, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONAllPathsWithTypes, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONDynamicPaths, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONDynamicPathsWithTypes, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONSharedDataPaths, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCJSONSharedDataPathsWithTypes, 0, 0, 1, 1),
    //Dynamic
    CHFunction(sql_query_grammar::SQLFunc::FUNCdynamicType, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdynamicElement, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisDynamicElementInSharedData, 0, 0, 1, 1),
    //logical
    CHFunction(sql_query_grammar::SQLFunc::FUNCand, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCor, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnot, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCxor, 0, 0, 2, ulimited_params),
    //map
    CHFunction(sql_query_grammar::SQLFunc::FUNCmap, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapFromArrays, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractKeyValuePairs, 0, 0, 1, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractKeyValuePairsWithEscaping, 0, 0, 1, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapAdd, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapSubtract, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapPopulateSeries, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapContains, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapKeys, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapValues, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapContainsKeyLike, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapExtractKeyLike, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapApply, 1, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapFilter, 1, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapUpdate, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapConcat, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapExists, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapAll, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapSort, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapPartialSort, 0, 1, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapReverseSort, 0, 1, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmapPartialReverseSort, 0, 1, 2, 2),
    //math
    CHFunction(sql_query_grammar::SQLFunc::FUNCe, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpi, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCexp, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClog, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCexp2, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCintExp2, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClog2, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCexp10, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCintExp10, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClog10, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsqrt, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcbrt, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCerf, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCerfc, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClgamma, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtgamma, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsin, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcos, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtan, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCasin, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCacos, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCatan, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpow, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcosh, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCacosh, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsinh, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCasinh, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtanh, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCatanh, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCatan2, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChypot, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNClog1p, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsign, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsigmoid, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdegrees, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCradians, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfactorial, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCwidth_bucket, 0, 0, 4, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCproportionsZTest, 0, 0, 6, 6),
    //nlp
    CHFunction(sql_query_grammar::SQLFunc::FUNCdetectCharset, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdetectLanguage, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdetectLanguageMixed, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdetectProgrammingLanguage, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdetectLanguageUnknown, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdetectTonality, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClemmatize, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCstem, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsynonyms, 0, 0, 2, 2),
    //nullable
    CHFunction(sql_query_grammar::SQLFunc::FUNCisNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisNullable, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisNotNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisNotDistinctFrom, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisZeroOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcoalesce, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCifNull, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnullIf, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCassumeNotNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoNullable, 0, 0, 1, 1),
    //string replace
    CHFunction(sql_query_grammar::SQLFunc::FUNCoverlay, 0, 0, 3, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCoverlayUTF8, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreplaceOne, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreplaceAll, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreplaceRegexpOne, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreplaceRegexpAll, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCregexpQuoteMeta, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformat, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtranslate, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtranslateUTF8, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCprintf, 0, 0, 1, ulimited_params),
    //rounding
    CHFunction(sql_query_grammar::SQLFunc::FUNCfloor, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCceiling, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtruncate, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCround, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCroundBankers, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCroundToExp2, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCroundDuration, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCroundAge, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCroundDown, 0, 0, 2, 2),
    //string search
    CHFunction(sql_query_grammar::SQLFunc::FUNCposition, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNClocate, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpositionCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpositionUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpositionCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAllPositions, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAllPositionsCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAllPositionsUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAllPositionsCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstPosition, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstPositionCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstPositionUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstPositionCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstIndex, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstIndexCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstIndexUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchFirstIndexCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAny, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAnyCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAnyUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiSearchAnyCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmatch, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiMatchAny, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiMatchAnyIndex, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiMatchAllIndices, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiFuzzyMatchAny, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiFuzzyMatchAnyIndex, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCmultiFuzzyMatchAllIndices, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextract, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractAll, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractAllGroupsHorizontal, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractAllGroupsVertical, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNClike, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnotLike, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCilike, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnotILike, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramDistanceCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramDistanceUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramDistanceCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSearch, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSearchCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSearchUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngramSearchCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountSubstrings, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountSubstringsCaseInsensitive, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountSubstringsCaseInsensitiveUTF8, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountMatches, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountMatchesCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCregexpExtract, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasSubsequence, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasSubsequenceCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasSubsequenceUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasSubsequenceCaseInsensitiveUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasToken, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasTokenOrNull, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasTokenCaseInsensitive, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasTokenCaseInsensitiveOrNull, 0, 0, 2, 2),
    //split strings
    CHFunction(sql_query_grammar::SQLFunc::FUNCsplitByChar, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsplitByString, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsplitByRegexp, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsplitByWhitespace, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsplitByNonAlpha, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCarrayStringConcat, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCalphaTokens, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractAllGroups, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCngrams, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtokens, 0, 0, 2, 2),
    //strings
    CHFunction(sql_query_grammar::SQLFunc::FUNCempty, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnotEmpty, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClength, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClengthUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCleft, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCleftUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCleftPad, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCleftPadUTF8, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCright, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrightUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrightPad, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrightPadUTF8, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNClower, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCupper, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClowerUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCupperUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisValidUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoValidUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCspace, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreverse, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreverseUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCconcat, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCconcatAssumeInjective, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCconcatWithSeparator, 0, 0, 3, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCconcatWithSeparatorAssumeInjective, 0, 0, 3, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubstring, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubstringUTF8, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubstringIndex, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsubstringIndexUTF8, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCappendTrailingCharIfAbsent, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCconvertCharset, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbase58Encode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbase58Decode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtryBase58Decode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbase64Encode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbase64URLEncode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbase64Decode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbase64URLDecode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtryBase64Decode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtryBase64URLDecode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCendsWith, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCendsWithUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCstartsWith, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCstartsWithUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtrimLeft, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtrimRight, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtrimBoth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCCRC32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCCRC32IEEE, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCCRC64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizeQuery, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizeQueryKeepNames, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizedQueryHash, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizedQueryHashKeepNames, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizeUTF8NFC, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizeUTF8NFD, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizeUTF8NFKC, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnormalizeUTF8NFKD, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCencodeXMLComponent, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdecodeXMLComponent, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdecodeHTMLComponent, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCextractTextFromHTML, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCascii, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsoundex, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpunycodeEncode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpunycodeDecode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtryPunycodeDecode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCidnaEncode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtryIdnaEncode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCidnaDecode, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbyteHammingDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCstringJaccardIndex, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCstringJaccardIndexUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCeditDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCeditDistanceUTF8, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdamerauLevenshteinDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCjaroSimilarity, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCjaroWinklerSimilarity, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCinitcap, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCinitcapUTF8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfirstLine, 0, 0, 1, 1),
    //timeseries
    CHFunction(sql_query_grammar::SQLFunc::FUNCseriesOutliersDetectTukey, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCseriesPeriodDetectFFT, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCseriesDecomposeSTL, 0, 0, 2, 2),
    //time window
    CHFunction(sql_query_grammar::SQLFunc::FUNCtumble, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtumbleStart, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtumbleEnd, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNChop, 0, 0, 3, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNChopStart, 0, 0, 3, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNChopEnd, 0, 0, 3, 4),
    //tuples
    CHFunction(sql_query_grammar::SQLFunc::FUNCtuple, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleElement, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCuntuple, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleHammingDistance, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleToNameValuePairs, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleNames, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtuplePlus, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleMinus, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleMultiply, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleDivide, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleNegate, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleMultiplyByNumber, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleDivideByNumber, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleConcat, 0, 0, 2, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleIntDiv, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleIntDivOrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleIntDivByNumber, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleIntDivOrZeroByNumber, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleModulo, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtupleModuloByNumber, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCflattenTuple, 0, 0, 1, 1),
    //type conversion
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt8OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt8OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt8OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt16, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt16OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt16OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt16OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt32OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt32OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt32OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt64OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt64OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt64OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt128, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt128OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt128OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt128OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt256, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt256OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt256OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoInt256OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt8OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt8OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt8OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt16, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt16OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt16OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt16OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt32OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt32OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt32OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt64OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt64OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt64OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt128, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt128OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt128OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt128OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt256, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt256OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt256OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUInt256OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat32OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat32OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat32OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat64OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat64OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFloat64OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDate, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateOrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateOrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTime, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTimeOrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTimeOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTimeOrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDate32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDate32OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDate32OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDate32OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTime64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTime64OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTime64OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDateTime64OrDefault, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal32, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal32OrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal32OrNull, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal32OrDefault, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal64, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal64OrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal64OrNull, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal64OrDefault, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal128, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal128OrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal128OrNull, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal128OrDefault, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal256, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal256OrZero, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal256OrNull, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimal256OrDefault, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoString, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoFixedString, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoStringCutToZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoDecimalString, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUInt8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUInt16, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUInt32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUInt64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUInt128, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUInt256, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsInt8, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsInt16, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsInt32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsInt64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsInt128, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsInt256, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsFloat32, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsFloat64, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsDate, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsDateTime, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsString, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsFixedString, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreinterpretAsUUID, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalYear, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalQuarter, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalMonth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalWeek, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalDay, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalHour, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalMinute, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalSecond, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalMillisecond, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalMicrosecond, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIntervalNanosecond, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeOrZero, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeOrNull, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeInJodaSyntax, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeInJodaSyntaxOrZero, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeInJodaSyntaxOrNull, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeBestEffort, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime32BestEffort, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeBestEffortUS, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeBestEffortOrNull, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime32BestEffortOrNull, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeBestEffortOrZero, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime32BestEffortOrZero, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeBestEffortUSOrNull, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTimeBestEffortUSOrZero, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime64BestEffort, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime64BestEffortUS, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime64BestEffortOrNull, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime64BestEffortOrZero, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime64BestEffortUSOrNull, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCparseDateTime64BestEffortUSOrZero, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoLowCardinality, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUnixTimestamp64Milli, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUnixTimestamp64Micro, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUnixTimestamp64Nano, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromUnixTimestamp64Milli, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromUnixTimestamp64Micro, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromUnixTimestamp64Nano, 0, 0, 1, 2),
    //ULID
    CHFunction(sql_query_grammar::SQLFunc::FUNCULIDStringToDateTime, 0, 0, 1, 2),
    //UUID
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUUID, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUUIDOrDefault, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUUIDOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUUIDOrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCUUIDStringToNum, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCUUIDNumToString, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCUUIDToNum, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCUUIDv7ToDateTime, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCserverUUID, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgenerateSnowflakeID, 0, 0, 0, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsnowflakeToDateTime, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsnowflakeToDateTime64, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdateTimeToSnowflake, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdateTime64ToSnowflake, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsnowflakeIDToDateTime, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCsnowflakeIDToDateTime64, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdateTimeToSnowflakeID, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdateTime64ToSnowflakeID, 0, 0, 1, 2),
    //UniqTheta
    CHFunction(sql_query_grammar::SQLFunc::FUNCuniqThetaUnion, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCuniqThetaIntersect, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCuniqThetaNot, 0, 0, 2, 2),
    //IPv4 and IPv6
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4NumToString, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4StringToNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4StringToNumOrDefault, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4StringToNumOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4NumToStringClassC, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6NumToString, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6StringToNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6StringToNumOrDefault, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6StringToNumOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4ToIPv6, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcutIPv6, 0, 0, 3, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv4CIDRToRange, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6CIDRToRange, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv4, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv4OrDefault, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv4OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv4OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv6, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv6OrDefault, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv6OrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoIPv6OrZero, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6StringToNumOrDefault, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCIPv6StringToNumOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisIPv4String, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisIPv6String, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisIPAddressInRange, 0, 0, 2, 2),
    //Other
    CHFunction(sql_query_grammar::SQLFunc::FUNChostname, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfqdn, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbasename, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCvisibleWidth, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoTypeName, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbyteSize, 0, 0, 1, ulimited_params),
    materialize,
    CHFunction(sql_query_grammar::SQLFunc::FUNCignore, 0, 0, 0, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcurrentDatabase, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcurrentUser, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcurrentSchemas, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisConstant, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbar, 0, 0, 4, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtransform, 0, 0, 3, 4),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformatReadableDecimalSize, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformatReadableSize, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformatReadableQuantity, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformatReadableTimeDelta, 0, 0, 1, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCleast, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgreatest, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCversion, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCbuildId, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCneighbor, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCMACNumToString, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCMACStringToNum, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCMACStringToOUI, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgetSizeOfEnumType, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCblockSerializedSize, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoColumnTypeName, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdumpColumnStructure, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdefaultValueOfArgumentType, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdefaultValueOfTypeName, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCindexHint, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCreplicate, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrevision, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCidentity, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCisDecimalOverflow, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcountDigits, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCerrorCodeToName, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtcpPort, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcurrentProfiles, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCenabledProfiles, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdefaultProfiles, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCcurrentRoles, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCenabledRoles, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdefaultRoles, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgetOSKernelVersion, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCvariantElement, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCvariantType, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCshowCertificate, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNClowCardinalityIndices, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNClowCardinalityKeys, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCdisplayName, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgetSubcolumn, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgetTypeSerializationStreams, 0, 0, 1, 1),
    /* Not Deterministic */
    //UUID
    CHFunction(sql_query_grammar::SQLFunc::FUNCgenerateUUIDv4, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgenerateUUIDv7, 0, 0, 1, 2),
    //ULID
    CHFunction(sql_query_grammar::SQLFunc::FUNCgenerateULID, 0, 0, 1, 2),
    //time
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimestamp, 0, 0, 1, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtimeZone, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCserverTimeZone, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnow, 0, 0, 0, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnow64, 0, 0, 0, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCnowInBlock, 0, 0, 0, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoday, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCyesterday, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformatDateTime, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCformatDateTimeInJodaSyntax, 0, 0, 2, 3),
    CHFunction(sql_query_grammar::SQLFunc::FUNCUTCTimestamp, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromUnixTimestamp, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromUnixTimestampInJodaSyntax, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoModifiedJulianDay, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoModifiedJulianDayOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromModifiedJulianDay, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromModifiedJulianDayOrNull, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtoUTCTimestamp, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfromUTCTimestamp, 0, 0, 2, 2),
    //rand
    CHFunction(sql_query_grammar::SQLFunc::FUNCrand, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrand64, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandCanonical, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandConstant, 0, 0, 0, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandUniform, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandNormal, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandLogNormal, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandBinomial, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandNegativeBinomial, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandPoisson, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandBernoulli, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandExponential, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandChiSquared, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandStudentT, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrandFisherF, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfuzzBits, 0, 0, 2, 2),
    //Other
    CHFunction(sql_query_grammar::SQLFunc::FUNCblockSize, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNChasThreadFuzzer, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCuptime, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCblockNumber, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrowNumberInBlock, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrowNumberInAllBlocks, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrunningDifference, 0, 0, 1, 1),
    CHFunction(sql_query_grammar::SQLFunc::FUNCrunningConcurrency, 0, 0, 2, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfilesystemAvailable, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfilesystemUnreserved, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCfilesystemCapacity, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCqueryID, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCinitialQueryID, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCpartitionID, 0, 0, 1, ulimited_params),
    CHFunction(sql_query_grammar::SQLFunc::FUNCshardNum, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCshardCount, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCzookeeperSessionUptime, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCgenerateRandomStructure, 0, 0, 0, 2),
    CHFunction(sql_query_grammar::SQLFunc::FUNCconnectionId, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtransactionID, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtransactionLatestSnapshot, 0, 0, 0, 0),
    CHFunction(sql_query_grammar::SQLFunc::FUNCtransactionOldestSnapshot, 0, 0, 0, 0)};

}
